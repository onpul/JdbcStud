■■■ DBConn.java ■■■

//-------------------------------------------------------------------------------------------

// 기본 구성

package com.util;

import java.sql.Connection; // sql 패키지 안에 Connection 클래스를 import

public class DBConn
{
	// 변수 선언
	private static Connection dbConn; // 추상적인 연결

	// 메소드 정의 -> 연결 (구체적인 연결)
	public static Connection getConnection()
	{}

	// 메소드 정의 -> 연결 메소드 오버로딩
	public static Connection getConnection(String url, String name, String pwd)
	{}

	// 메소드 정의 -> 연결 종료
	public static void close()
	{}
}

//-------------------------------------------------------------------------------------------

// 설계해 보자

package com.util;

import java.sql.Connection;

public class DBConn
{
	// 변수 선언
	private static Connection dbConn; // 추상적인 연결

	// 메소드 정의 -> 연결 (구체적인 연결)
	public static Connection getConnection()
	{
		if (dbConn = null) // 연결되지 않은 경우에만 연결 시도 -> 싱글톤
		{
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			String user = "scott";
			String pwd = "tiger";

			Class.forName("oracle.jdbc.driver.OracleDriver");
			// 클래스라는 클래스의 forName 스태틱 메소드
                        // OracleDriver 클래스에 대한 객체 생성 (클래스 찾아줘~)

			dbConn = DriverManager.getConnection(url, user, pwd);
			// 오라클 서버 실제 연결(주소, 계정명, 패스워드)
		}

		return dbConn;
	}

	// 메소드 정의 -> 연결 메소드 오버로딩
	public static Connection getConnection(String url, String name, String pwd)
	{}

	// 메소드 정의 -> 연결 종료
	public static void close()
	{}
}