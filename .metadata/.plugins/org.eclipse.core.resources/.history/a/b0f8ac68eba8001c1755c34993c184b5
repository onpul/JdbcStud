/*===================
     DBConn.java
===================*/

// ※ 싱글톤(singleton) 디자인 패턴을 이용한 Database 연결 객체 생성 전용 클래스
//    → DB 연결 과정이 가장 부하가 크기 때문에
//       한 번 연결된 객체를 계속 사용하는 것이 좋지 않을까...
// 개발에서의 디자인 패턴 → 계층 구조를 어떻게 설계하느냐

package com.util;

import java.sql.Connection;

public class DBConn
{
	// 변수 선언
	private static Connection dbConn; // 추상적인 연결
	
	// 메소드 정의 → 연결
	public static Connection getConnection() // 구체적인 연결
	{
		// 한 번 연결된 객체를 계속 사용
		// 즉, 연결되지 않은 경우에만 연결을 시도하겠다는 의미
		// → 싱글톤(디자인 패턴)
		if (dbConn == null)
		{
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			//-- 『localhost』 는 오라클 서버의 ip 주소를 기재하는 부분
			//   『1521』 은 오라클 리스너 Port Number
			//   『xe』는 오라클 SID(Express Edition 의 SID 는 xe)
			
		}
		
		return dbConn;
	}

}
